{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\WebPages\\\\DavidWebsiteReact\\\\DavidWebsiteReact\\\\src\\\\components\\\\ThreeBackground.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    // Random function\n    const rand = (min, max) => {\n      return Math.random() * (max - min) + min;\n    };\n\n    // Setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvasRef.current\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    camera.position.setZ(30);\n    camera.position.setX(-3);\n    renderer.render(scene, camera);\n\n    // Torus\n    const geometry = new THREE.TorusGeometry(20, 3, 16, 100);\n    const material = new THREE.MeshStandardMaterial({\n      color: 0xf0f0f0\n    });\n    const torus = new THREE.Mesh(geometry, material);\n    torus.position.set(0, 0, 0);\n\n    // Background texture\n    const spaceTexture = new THREE.TextureLoader().load('/images/space.png');\n    scene.background = spaceTexture;\n\n    // Lights\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n    const ambientLight = new THREE.AmbientLight(0xababab);\n    scene.add(ambientLight);\n\n    // Objects\n    let laptopLoaded = false;\n    let laptop = null;\n    const mtlLoader = new MTLLoader();\n    mtlLoader.load('/images/laptop/10119_Laptop_Computer_v2_max2011_SG_it2.mtl', mtl => {\n      mtl.preload();\n      const objLoader = new OBJLoader();\n      objLoader.setMaterials(mtl);\n      objLoader.load('/images/laptop/10119_Laptop_Computer_v2_max2011_SG_it2.obj', root => {\n        scene.add(root);\n        laptopLoaded = true;\n        laptop = root;\n        if (laptop) {\n          laptop.position.set(0, 0, 10);\n          laptop.rotation.set(0, -2 * Math.PI, 0);\n        }\n      });\n    });\n\n    // Cubes\n    const loader = new THREE.TextureLoader();\n    const loadColorTexture = path => {\n      const texture = loader.load(path);\n      texture.colorSpace = THREE.SRGBColorSpace;\n      return texture;\n    };\n    const materials = [new THREE.MeshBasicMaterial({\n      map: loadColorTexture('/images/icons/C_Logo.png')\n    }), new THREE.MeshBasicMaterial({\n      map: loadColorTexture('/images/icons/gameMaker.png')\n    }), new THREE.MeshBasicMaterial({\n      map: loadColorTexture('/images/icons/java.png')\n    }), new THREE.MeshBasicMaterial({\n      map: loadColorTexture('/images/icons/js_logo.png')\n    }), new THREE.MeshBasicMaterial({\n      map: loadColorTexture('/images/icons/python.png')\n    }), new THREE.MeshBasicMaterial({\n      map: loadColorTexture('/images/icons/react.png')\n    })];\n    const makeInstance = (color, x, y, z) => {\n      const cubeGeometry = new THREE.BoxGeometry(10, 10, 10);\n      const cube = new THREE.Mesh(cubeGeometry, materials);\n      scene.add(cube);\n      cube.position.set(x, y, z);\n      return cube;\n    };\n    const cubey = -1.5;\n    const cubez = 1;\n    const cubes = [makeInstance(0x8844aa, -25, cubey, cubez), makeInstance(0xaa8844, 25, cubey, cubez)];\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n\n    // Stars\n    const addStar = () => {\n      const starGeometry = new THREE.SphereGeometry(0.25, 24, 24);\n      const starMaterial = new THREE.MeshStandardMaterial({\n        color: 0xffffff\n      });\n      const star = new THREE.Mesh(starGeometry, starMaterial);\n      const [x, y, z] = Array(3).fill(0).map(() => THREE.MathUtils.randFloatSpread(100));\n      star.position.set(x, y, z);\n      scene.add(star);\n      return star;\n    };\n    const stars = [];\n    const starv = [];\n    for (let i = 0; i < 200; i++) {\n      stars[i] = addStar();\n      starv[i] = new THREE.Vector2(rand(-0.1, 0.1), rand(-0.1, 0.1));\n    }\n\n    // Scroll Animation\n    const moveCamera = () => {\n      const t = document.body.getBoundingClientRect().top;\n      light.position.set(0, t * 10, t * -0.002);\n      torus.position.z = t / 10 + 70;\n      torus.position.x = t * -0.002;\n      torus.position.y = t * -0.002;\n      if (laptop) {\n        laptop.position.z = t / 10 + 10;\n        laptop.position.x = t * -0.002;\n        laptop.rotation.y = t * -0.002;\n      }\n      cubes[0].position.x = t * -0.03 - 65;\n      cubes[1].position.x = t * 0.03 + 70;\n    };\n    document.body.addEventListener('scroll', moveCamera);\n    moveCamera();\n\n    // Animation Loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      if (laptop && laptop.position.z < -10) {\n        laptop.rotation.y += 0.01;\n      }\n      for (let i = 0; i < 200; i++) {\n        stars[i].position.z += 0.1;\n        if (stars[i].position.z > 50) {\n          stars[i].position.z = -10;\n        }\n        stars[i].position.x += starv[i].x;\n        if (stars[i].position.x > 50) {\n          stars[i].position.x = -10;\n        } else if (stars[i].position.x < -50) {\n          stars[i].position.x = 10;\n        }\n        stars[i].rotation.y += starv[i].y;\n        if (stars[i].rotation.y > 2 * Math.PI) {\n          stars[i].rotation.y = 0;\n        } else if (stars[i].rotation.y < 0) {\n          stars[i].rotation.y = 2 * Math.PI;\n        }\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      document.body.removeEventListener('scroll', moveCamera);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    id: \"c\",\n    style: {\n      backgroundColor: 'black',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      zIndex: -1,\n      width: '100%',\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ThreeBackground;\nexport default ThreeBackground;\nvar _c;\n$RefreshReg$(_c, \"ThreeBackground\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","OBJLoader","MTLLoader","jsxDEV","_jsxDEV","ThreeBackground","_s","canvasRef","current","rand","min","max","Math","random","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","canvas","setPixelRatio","devicePixelRatio","setSize","position","setZ","setX","render","geometry","TorusGeometry","material","MeshStandardMaterial","color","torus","Mesh","set","spaceTexture","TextureLoader","load","background","light","HemisphereLight","add","ambientLight","AmbientLight","laptopLoaded","laptop","mtlLoader","mtl","preload","objLoader","setMaterials","root","rotation","PI","loader","loadColorTexture","path","texture","colorSpace","SRGBColorSpace","materials","MeshBasicMaterial","map","makeInstance","x","y","z","cubeGeometry","BoxGeometry","cube","cubey","cubez","cubes","controls","domElement","addStar","starGeometry","SphereGeometry","starMaterial","star","Array","fill","MathUtils","randFloatSpread","stars","starv","i","Vector2","moveCamera","t","document","body","getBoundingClientRect","top","addEventListener","animate","requestAnimationFrame","update","handleResize","aspect","updateProjectionMatrix","removeEventListener","ref","id","style","backgroundColor","left","zIndex","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/david/WebPages/DavidWebsiteReact/DavidWebsiteReact/src/components/ThreeBackground.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\r\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\r\n\r\nconst ThreeBackground: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n\r\n    // Random function\r\n    const rand = (min: number, max: number) => {\r\n      return Math.random() * (max - min) + min;\r\n    };\r\n\r\n    // Setup\r\n    const scene = new THREE.Scene();\r\n    \r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n\r\n    const renderer = new THREE.WebGLRenderer({\r\n      canvas: canvasRef.current,\r\n    });\r\n\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    camera.position.setZ(30);\r\n    camera.position.setX(-3);\r\n\r\n    renderer.render(scene, camera);\r\n\r\n    // Torus\r\n    const geometry = new THREE.TorusGeometry(20, 3, 16, 100);\r\n    const material = new THREE.MeshStandardMaterial({ color: 0xf0f0f0 });\r\n    const torus = new THREE.Mesh(geometry, material);\r\n\r\n    torus.position.set(0, 0, 0);\r\n    \r\n    // Background texture\r\n    const spaceTexture = new THREE.TextureLoader().load('/images/space.png');\r\n    scene.background = spaceTexture;\r\n\r\n    // Lights\r\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\r\n    scene.add(light);\r\n\r\n    const ambientLight = new THREE.AmbientLight(0xababab);\r\n    scene.add(ambientLight);\r\n\r\n    // Objects\r\n    let laptopLoaded = false;\r\n    let laptop: THREE.Object3D | null = null;\r\n    const mtlLoader = new MTLLoader();\r\n    mtlLoader.load(\r\n      '/images/laptop/10119_Laptop_Computer_v2_max2011_SG_it2.mtl',\r\n      (mtl: any) => {\r\n        mtl.preload();\r\n        const objLoader = new OBJLoader();\r\n        objLoader.setMaterials(mtl);\r\n        objLoader.load(\r\n          '/images/laptop/10119_Laptop_Computer_v2_max2011_SG_it2.obj',\r\n          (root: any) => {\r\n            scene.add(root);\r\n            laptopLoaded = true;\r\n            laptop = root;\r\n            if (laptop) {\r\n              laptop.position.set(0, 0, 10);\r\n              laptop.rotation.set(0, -2 * Math.PI, 0);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n    // Cubes\r\n    const loader = new THREE.TextureLoader();\r\n    const loadColorTexture = (path: string) => {\r\n      const texture = loader.load(path);\r\n      texture.colorSpace = THREE.SRGBColorSpace;\r\n      return texture;\r\n    };\r\n\r\n    const materials = [\r\n      new THREE.MeshBasicMaterial({\r\n        map: loadColorTexture('/images/icons/C_Logo.png'),\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        map: loadColorTexture('/images/icons/gameMaker.png'),\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        map: loadColorTexture('/images/icons/java.png'),\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        map: loadColorTexture('/images/icons/js_logo.png'),\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        map: loadColorTexture('/images/icons/python.png'),\r\n      }),\r\n      new THREE.MeshBasicMaterial({\r\n        map: loadColorTexture('/images/icons/react.png'),\r\n      }),\r\n    ];\r\n\r\n    const makeInstance = (color: number, x: number, y: number, z: number) => {\r\n      const cubeGeometry = new THREE.BoxGeometry(10, 10, 10);\r\n      const cube = new THREE.Mesh(cubeGeometry, materials);\r\n      scene.add(cube);\r\n      cube.position.set(x, y, z);\r\n      return cube;\r\n    };\r\n\r\n    const cubey = -1.5;\r\n    const cubez = 1;\r\n    const cubes = [\r\n      makeInstance(0x8844aa, -25, cubey, cubez),\r\n      makeInstance(0xaa8844, 25, cubey, cubez),\r\n    ];\r\n\r\n    // Controls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n    // Stars\r\n    const addStar = () => {\r\n      const starGeometry = new THREE.SphereGeometry(0.25, 24, 24);\r\n      const starMaterial = new THREE.MeshStandardMaterial({ color: 0xffffff });\r\n      const star = new THREE.Mesh(starGeometry, starMaterial);\r\n\r\n      const [x, y, z] = Array(3)\r\n        .fill(0)\r\n        .map(() => THREE.MathUtils.randFloatSpread(100));\r\n\r\n      star.position.set(x, y, z);\r\n      scene.add(star);\r\n      return star;\r\n    };\r\n\r\n    const stars: THREE.Mesh[] = [];\r\n    const starv: THREE.Vector2[] = [];\r\n    for (let i = 0; i < 200; i++) {\r\n      stars[i] = addStar();\r\n      starv[i] = new THREE.Vector2(rand(-0.1, 0.1), rand(-0.1, 0.1));\r\n    }\r\n\r\n    // Scroll Animation\r\n    const moveCamera = () => {\r\n      const t = document.body.getBoundingClientRect().top;\r\n      light.position.set(0, t * 10, t * -0.002);\r\n      torus.position.z = t / 10 + 70;\r\n      torus.position.x = t * -0.002;\r\n      torus.position.y = t * -0.002;\r\n      \r\n      if (laptop) {\r\n        laptop.position.z = t / 10 + 10;\r\n        laptop.position.x = t * -0.002;\r\n        laptop.rotation.y = t * -0.002;\r\n      }\r\n      \r\n      cubes[0].position.x = t * -0.03 - 65;\r\n      cubes[1].position.x = t * 0.03 + 70;\r\n    };\r\n\r\n    document.body.addEventListener('scroll', moveCamera);\r\n    moveCamera();\r\n\r\n    // Animation Loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      \r\n      if (laptop && laptop.position.z < -10) {\r\n        laptop.rotation.y += 0.01;\r\n      }\r\n      \r\n      for (let i = 0; i < 200; i++) {\r\n        stars[i].position.z += 0.1;\r\n        if (stars[i].position.z > 50) {\r\n          stars[i].position.z = -10;\r\n        }\r\n        stars[i].position.x += starv[i].x;\r\n        if (stars[i].position.x > 50) {\r\n          stars[i].position.x = -10;\r\n        } else if (stars[i].position.x < -50) {\r\n          stars[i].position.x = 10;\r\n        }\r\n        stars[i].rotation.y += starv[i].y;\r\n        if (stars[i].rotation.y > 2 * Math.PI) {\r\n          stars[i].rotation.y = 0;\r\n        } else if (stars[i].rotation.y < 0) {\r\n          stars[i].rotation.y = 2 * Math.PI;\r\n        }\r\n      }\r\n      \r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      document.body.removeEventListener('scroll', moveCamera);\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      id=\"c\"\r\n      style={{\r\n        backgroundColor: 'black',\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: -1,\r\n        width: '100%',\r\n        height: '100vh'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ThreeBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}